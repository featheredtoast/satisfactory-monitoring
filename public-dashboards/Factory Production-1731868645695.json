{
  "__inputs": [
    {
      "name": "DS_POSTGRES",
      "label": "Postgres",
      "description": "",
      "type": "datasource",
      "pluginId": "grafana-postgresql-datasource",
      "pluginName": "PostgreSQL"
    },
    {
      "name": "DS_PROMETHEUS",
      "label": "Prometheus",
      "description": "",
      "type": "datasource",
      "pluginId": "prometheus",
      "pluginName": "Prometheus"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "geomap",
      "name": "Geomap",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "11.3.0"
    },
    {
      "type": "datasource",
      "id": "grafana-postgresql-datasource",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "datasource",
      "id": "prometheus",
      "name": "Prometheus",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 9,
      "panels": [],
      "title": "Info",
      "type": "row"
    },
    {
      "gridPos": {
        "h": 5,
        "w": 12,
        "x": 0,
        "y": 1
      },
      "id": 11,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "Calculate input and output by a square region, bounded by variables.\n\nEdit the map displayed and inspect buildings to get approximate x + y coordinates.\nThen plugin bounds for x and y. Factory exports (+/min) and imports (-/min) will be updated according to the new area.\n\nx min, x max, y min and y max are ingame coordinates.",
        "mode": "markdown"
      },
      "pluginVersion": "11.3.0",
      "title": "Factory production calculator by region",
      "type": "text"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 6
      },
      "id": 7,
      "panels": [],
      "title": "Factory details",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_POSTGRES}"
      },
      "description": "Approximate map of the factory - useful for plotting factory boundaries",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 14,
        "w": 12,
        "x": 0,
        "y": 7
      },
      "id": 5,
      "options": {
        "basemap": {
          "config": {
            "url": "https://satisfactory-map.featheredtoast.com/map/{z}/{x}/{y}.png"
          },
          "name": "Layer 0",
          "tooltip": true,
          "type": "xyz"
        },
        "controls": {
          "mouseWheelZoom": true,
          "showAttribution": false,
          "showDebug": false,
          "showMeasure": false,
          "showScale": false,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "showLegend": false,
              "style": {
                "color": {
                  "fixed": "dark-blue"
                },
                "opacity": 0.8,
                "rotation": {
                  "fixed": 0,
                  "max": 360,
                  "min": -360,
                  "mode": "mod"
                },
                "size": {
                  "fixed": 5,
                  "max": 15,
                  "min": 2
                },
                "symbol": {
                  "fixed": "img/icons/marker/circle.svg",
                  "mode": "fixed"
                },
                "textConfig": {
                  "fontSize": 12,
                  "offsetX": 0,
                  "offsetY": 0,
                  "textAlign": "center",
                  "textBaseline": "middle"
                }
              }
            },
            "filterData": {
              "id": "byRefId",
              "options": "Other Buildings"
            },
            "location": {
              "mode": "auto"
            },
            "name": "Other",
            "tooltip": true,
            "type": "markers"
          },
          {
            "config": {
              "showLegend": true,
              "style": {
                "color": {
                  "fixed": "dark-orange"
                },
                "opacity": 0.7,
                "rotation": {
                  "fixed": 0,
                  "max": 360,
                  "min": -360,
                  "mode": "mod"
                },
                "size": {
                  "fixed": 5,
                  "max": 15,
                  "min": 2
                },
                "symbol": {
                  "fixed": "img/icons/marker/circle.svg",
                  "mode": "fixed"
                },
                "textConfig": {
                  "fontSize": 12,
                  "offsetX": 0,
                  "offsetY": 0,
                  "textAlign": "center",
                  "textBaseline": "middle"
                }
              }
            },
            "filterData": {
              "id": "byRefId",
              "options": "Targeted Buildings"
            },
            "location": {
              "mode": "auto"
            },
            "name": "Selected",
            "tooltip": true,
            "type": "markers"
          },
          {
            "config": {
              "style": {
                "color": {
                  "fixed": "#FF9830"
                },
                "lineWidth": 2,
                "opacity": 1,
                "rotation": {
                  "fixed": 0,
                  "max": 360,
                  "min": -360,
                  "mode": "mod"
                },
                "size": {
                  "fixed": 5,
                  "max": 15,
                  "min": 2
                },
                "symbol": {
                  "fixed": "img/icons/marker/circle.svg",
                  "mode": "fixed"
                },
                "textConfig": {
                  "fontSize": 12,
                  "offsetX": 0,
                  "offsetY": 0,
                  "textAlign": "center",
                  "textBaseline": "middle"
                }
              }
            },
            "filterData": {
              "id": "byRefId",
              "options": "Selected Area"
            },
            "location": {
              "mode": "auto"
            },
            "name": "boundary",
            "tooltip": true,
            "type": "route"
          },
          {
            "config": {
              "showLegend": false,
              "style": {
                "color": {
                  "fixed": "transparent"
                },
                "opacity": 0,
                "rotation": {
                  "fixed": 0,
                  "max": 360,
                  "min": -360,
                  "mode": "mod"
                },
                "size": {
                  "fixed": 5,
                  "max": 15,
                  "min": 2
                },
                "symbol": {
                  "fixed": "img/icons/marker/circle.svg",
                  "mode": "fixed"
                },
                "symbolAlign": {
                  "horizontal": "center",
                  "vertical": "center"
                },
                "textConfig": {
                  "fontSize": 12,
                  "offsetX": 0,
                  "offsetY": 0,
                  "textAlign": "center",
                  "textBaseline": "middle"
                }
              }
            },
            "filterData": {
              "id": "byRefId",
              "options": "Selected Area"
            },
            "location": {
              "mode": "auto"
            },
            "name": "boundary view",
            "tooltip": false,
            "type": "markers"
          }
        ],
        "tooltip": {
          "mode": "details"
        },
        "view": {
          "allLayers": false,
          "id": "fit",
          "lastOnly": false,
          "lat": -0.045,
          "layer": "boundary view",
          "lon": 0.045,
          "zoom": 15
        }
      },
      "pluginVersion": "11.3.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRES}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT\ndata ->> 'Recipe' as recipe,\ndata ->> 'Name' as building,\ndata,\n(data -> 'location' ->> 'x')::NUMERIC/100 as x,\n(data -> 'location' ->> 'y')::NUMERIC/100 as y,\n(data -> 'location' ->> 'z')::NUMERIC/100 as z,\n(((data -> 'location' ->> 'x')::NUMERIC + 375000) * 0.0000001015) as longitude,\n(((data -> 'location' ->> 'y')::NUMERIC + 375000) * -0.0000001172) as latitude\nFROM cache\nwhere metric in ('factory', 'extractor')\nand (data -> 'location' ->> 'x')::NUMERIC/100 >= $xmin\nand (data -> 'location' ->> 'x')::NUMERIC/100 <= $xmax \nand (data -> 'location' ->> 'y')::NUMERIC/100 >= $ymin\nand (data -> 'location' ->> 'y')::NUMERIC/100 <= $ymax\nand url = '$server'\nand session_name = '$session'",
          "refId": "Targeted Buildings",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "cache"
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRES}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT\n  data ->> 'Recipe' as recipe,\n  data ->> 'building' as building,\n  (data -> 'location' ->> 'x') :: NUMERIC / 100 as x,\n  (data -> 'location' ->> 'y') :: NUMERIC / 100 as y,\n  (data -> 'location' ->> 'z') :: NUMERIC / 100 as z,\n  (\n    ((data -> 'location' ->> 'x') :: NUMERIC + 375000) * 0.0000001015\n  ) as longitude,\n  (\n    ((data -> 'location' ->> 'y') :: NUMERIC + 375000) * -0.0000001172\n  ) as latitude\nFROM\n  cache\nwhere\n  metric in ('factory', 'extractor')\n  and (\n    (data -> 'location' ->> 'x') :: NUMERIC / 100 < $xmin\n    or (data -> 'location' ->> 'x') :: NUMERIC / 100 > $xmax\n    or (data -> 'location' ->> 'y') :: NUMERIC / 100 < $ymin\n    or (data -> 'location' ->> 'y') :: NUMERIC / 100 > $ymax\n  )\n  and url = '$server'\n  and session_name = '$session'",
          "refId": "Other Buildings",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRES}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "(\n  select\n    id,\n    x,\n    y,\n    ((x * 100 + 375000) * 0.0000001015) as longitude,\n    ((y * 100 + 375000) * -0.0000001172) as latitude\n  from\n    (\n      values\n(1, $xmin, $ymin),\n        (2, $xmax, $ymin),\n        (3, $xmax, $ymax),\n        (4, $xmin, $ymax),\n        (5, $xmin, $ymin)\n    ) as coords (id, x, y)\n)\norder by\n  id",
          "refId": "Selected Area",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Factory Map",
      "type": "geomap"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_POSTGRES}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 14,
        "w": 12,
        "x": 12,
        "y": 7
      },
      "id": 13,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.3.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRES}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\ndata ->> 'Recipe' as recipe,\ndata ->> 'Name' as building,\ndata ->> 'ManuSpeed' as clockspeed,\ncount(*) as count\nFROM cache\nwhere metric in ('factory', 'extractor')\nand (data -> 'location' ->> 'x')::NUMERIC/100 >= $xmin\nand (data -> 'location' ->> 'x')::NUMERIC/100 <= $xmax \nand (data -> 'location' ->> 'y')::NUMERIC/100 >= $ymin\nand (data -> 'location' ->> 'y')::NUMERIC/100 <= $ymax\nand url = '$server'\nand session_name = '$session'\ngroup by recipe, building, clockspeed",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Selected buildings and recipes",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_POSTGRES}"
      },
      "description": "Current average production(+) and consumption(-) over the selected time period",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "data"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 337
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 21
      },
      "id": 2,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 2,
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "11.2.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRES}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  COALESCE(prod.name, cons.name) as name,\n  COALESCE(prod.rate, 0) - COALESCE(cons.rate, 0) as rate\nfrom\n  (\n    select\n      t.name,\n      avg(t.rate) as rate\n    from\n      (\n        SELECT\n          t.name,\n          sum(t.val) as rate\n        from\n          (\n            SELECT\n              time,\n              jsonb_path_query(data, '$.ingredients[*]') ->> 'Name' as name,\n              (\n                (\n                  jsonb_path_query(data, '$.ingredients[*]') ->> 'CurrentConsumed'\n                ) :: NUMERIC\n              ) val\n            FROM\n              cache_with_history\n            where\n              metric in ('factory', 'extractor')\n              AND (data -> 'location' ->> 'x') :: NUMERIC BETWEEN ($xmin * 100)\n              and ($xmax * 100)\n              AND (data -> 'location' ->> 'y') :: NUMERIC BETWEEN ($ymin * 100)\n              and ($ymax * 100)\n              and $__timeFilter(time) \n              and url = '$server'\n              and session_name = '$session'\n          ) as t\n        group by\n          t.name,\n          t.time\n        order by\n          t.name\n      ) as t\n    group by\n      t.name\n  ) as cons full\n  outer join (\n    select\n      t.name,\n      avg(t.rate) as rate\n    from\n      (\n        SELECT\n          t.name,\n          sum(t.val) as rate\n        from\n          (\n            SELECT\n              time,\n              jsonb_path_query(data, '$.production[*]') ->> 'Name' as name,\n              (\n                jsonb_path_query(data, '$.production[*]') ->> 'CurrentProd'\n              ) :: NUMERIC val\n            FROM\n              cache_with_history\n            where\n              metric in ('factory', 'extractor')\n              AND (data -> 'location' ->> 'x') :: NUMERIC BETWEEN ($xmin * 100)\n              and ($xmax * 100)\n              AND (data -> 'location' ->> 'y') :: NUMERIC BETWEEN ($ymin * 100)\n              and ($ymax * 100)\n              and $__timeFilter(time) \n              and url = '$server'\n              and session_name = '$session'\n          ) as t\n        group by\n          t.name,\n          t.time\n        order by\n          t.name\n      ) as t\n    group by\n      t.name\n  ) as prod on cons.name = prod.name\nwhere\n  COALESCE(prod.rate, 0) - COALESCE(cons.rate, 0) != 0\norder by\n  rate desc,\n  name\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "*",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "cache"
        }
      ],
      "title": "Current average Production",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${DS_POSTGRES}"
      },
      "description": "Maximum production(+) and consumption(-)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "data"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 337
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 21
      },
      "id": 3,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "11.2.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${DS_POSTGRES}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  COALESCE(prod.name, cons.name) as name,\n  COALESCE(prod.rate, 0) - COALESCE(cons.rate, 0) as rate\nfrom\n  (\n    SELECT\n      t.name,\n      sum(t.val) as rate\n    from\n      (\n        SELECT\n          jsonb_path_query(data, '$.ingredients[*]') ->> 'Name' as name,\n          (\n            (jsonb_path_query(data, '$.ingredients[*]') ->> 'MaxConsumed') :: NUMERIC\n          ) val\n        FROM\n          cache\n        where\n          metric in ('factory', 'extractor')\n          AND (data -> 'location' ->> 'x') :: NUMERIC BETWEEN ($xmin * 100)\n          and ($xmax * 100)\n          AND (data -> 'location' ->> 'y') :: NUMERIC BETWEEN ($ymin * 100)\n          and ($ymax * 100)\n          and url = '$server'\n          and session_name = '$session'\n      ) as t\n    group by\n      t.name\n  ) as cons full\n  outer join (\n    SELECT\n      t.name,\n      sum(t.val) as rate\n    from\n      (\n        SELECT\n          jsonb_path_query(data, '$.production[*]') ->> 'Name' as name,\n          (jsonb_path_query(data, '$.production[*]') ->> 'MaxProd') :: NUMERIC val\n        FROM\n          cache\n        where\n          metric in ('factory', 'extractor')\n          AND (data -> 'location' ->> 'x') :: NUMERIC BETWEEN ($xmin * 100)\n          and ($xmax * 100)\n          AND (data -> 'location' ->> 'y') :: NUMERIC BETWEEN ($ymin * 100)\n          and ($ymax * 100)\n          and url = '$server'\n          and session_name = '$session'\n      ) as t\n    group by\n      t.name\n  ) as prod on cons.name = prod.name\nwhere\n  COALESCE(prod.rate, 0) - COALESCE(cons.rate, 0) != 0\norder by\n  rate desc,\n  name",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "*",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "cache"
        }
      ],
      "title": "Max Production",
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_PROMETHEUS}"
        },
        "definition": "label_values(url)",
        "includeAll": false,
        "name": "server",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(url)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_PROMETHEUS}"
        },
        "definition": "label_values({url=\"$server\"},session_name)",
        "includeAll": false,
        "name": "session",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values({url=\"$server\"},session_name)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "-3750",
          "value": "-3750"
        },
        "description": "leftmost bound of factory",
        "label": "x min",
        "name": "xmin",
        "options": [
          {
            "selected": true,
            "text": "-3750",
            "value": "-3750"
          }
        ],
        "query": "-3750",
        "type": "textbox"
      },
      {
        "current": {
          "text": "3750",
          "value": "3750"
        },
        "description": "rightmost bound of factory",
        "label": "x max",
        "name": "xmax",
        "options": [
          {
            "selected": true,
            "text": "3750",
            "value": "3750"
          }
        ],
        "query": "3750",
        "type": "textbox"
      },
      {
        "current": {
          "text": "4910",
          "value": "4910"
        },
        "description": "northern bound of factory",
        "label": "y max",
        "name": "ymax",
        "options": [
          {
            "selected": true,
            "text": "4910",
            "value": "4910"
          }
        ],
        "query": "4910",
        "type": "textbox"
      },
      {
        "current": {
          "text": "-3750",
          "value": "-3750"
        },
        "description": "southern bound of factory",
        "label": "y min",
        "name": "ymin",
        "options": [
          {
            "selected": true,
            "text": "-3750",
            "value": "-3750"
          }
        ],
        "query": "-3750",
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "now-3h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Factory Production",
  "uid": "pUvf_pt4k",
  "version": 1,
  "weekStart": ""
}